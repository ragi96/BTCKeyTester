name: Build
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ⚡ Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🧱 Set up Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy, llvm-tools-preview

      - name: 🧹 rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

      - name: 🔍 clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets --all-features -- -D warnings

      - name: 🛠️ Build Binary Target
        run: cargo build --bin btc_keytester

      - name: 🧪 Run Tests with Profiling
        run: cargo test --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Cpanic=abort"

      - name: 🧼 Install grcov
        run: cargo install grcov

      - name: 📊 Generate Coverage Report (grcov)
        run: |
          grcov . \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --branch \
            --ignore-not-existing \
            --ignore "*tests/*" \
            --ignore "*examples/*" \
            -o lcov.info

      - name: ☁️ Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true

      - name: 🔎 SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: ✅ SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
